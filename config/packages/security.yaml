security:
    encoders:
        FOS\UserBundle\Model\UserInterface: bcrypt

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN

    providers:
        fos_userbundle:
            id: fos_user.user_provider.username_email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            pattern: ^/
            form_login:
                provider:               fos_userbundle
                login_path:             /login
                check_path:             /login_check
#                csrf_provider: form.csrf_provider
            oauth:
                resource_owners:
                    google: "/login/check-google"
                login_path: /login
                failure_path: /login
                oauth_user_provider:
                    service: my_user_provider
            logout:       true
            anonymous:    true
        login:
            pattern: ^/login$
            security: false

            remember_me:
                secret: "%kernel.secret%"
                lifetime: 31536000 # 365 days in seconds
                path: /
                domain: ~
            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/user/, role: ROLE_USER }
        - { path: ^/admin/, role: ROLE_ADMIN }

        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
